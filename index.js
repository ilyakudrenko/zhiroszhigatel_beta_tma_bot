const TelegramBot = require('node-telegram-bot-api');
const token = '7761056672:AAEe8gPZjn3L47D-nrQvUOtAA3nPNnMVfzM';
const bot = new TelegramBot(token, {polling: true});
const webAppUrl = 'https://zhiroazhigatel.netlify.app/';

// Matches "/echo [whatever]"
bot.onText(/\/echo (.+)/, (msg, match) => {
    // 'msg' is the received Message from Telegram
    // 'match' is the result of executing the regexp above on the text content
    // of the message

    const chatId = msg.chat.id;
    const resp = match[1]; // the captured "whatever"

    // send back the matched "whatever" to the chat
    bot.sendMessage(chatId, resp);
});

// Listen for any kind of message. There are different kinds of
// messages.
bot.on('message', async (msg) => {
    const chatId = msg.chat.id;
    const text = msg.text;

    if(text === '/start') {
        await bot.sendMessage(chatId, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ñ–∏—Ä–æ—Å–∂–∏–≥–∞—Ç–µ–ª—å! –ú—ã —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å —Å—Ä–µ–¥–∏ –Ω–∞—à–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –í–ø–µ—Ä–µ–¥–∏ –≤–∞—Å –∂–¥—É—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥–∏–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –≤–∞–º –¥–æ—Å—Ç–∏—á—å —Å–≤–æ–∏—Ö —Ü–µ–ª–µ–π. –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –Ω–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤–∞ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –≤–∞—Å. –£–¥–∞—á–∏ –∏ —É—Å–ø–µ—à–Ω—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫! üí™üî•', {
            reply_markup: {
                keyboard: [
                    [{text: '–ó–∞–ø—É—Å—Ç–∏—Ç—å', web_app: {url: webAppUrl}}]
                ]
            }
        })

        await bot.sendMessage(chatId, '–ü–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∏–∫—É–¥–∞', {
            reply_markup: {
                inline_keyboard: [
                    [{text: '–í–æ–π—Ç–∏', web_app: {url: webAppUrl}}]
                ]
            }
        })
    }


    if (text === '/buy') {
        const invoice = {
            chat_id: chatId,
            title: '–ü–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫', // REQUIRED - Add a title
            description: '–î–æ—Å—Ç—É–ø –∫ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω–æ–º—É –ø–ª–∞–Ω—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫', // REQUIRED - Add a description
            payload: JSON.stringify({ user_id: msg.from.id, training_id: 'unique_training_plan_id' }),
            provider_token: '', // Leave empty for Telegram Stars
            currency: 'XTR', // Telegram Stars currency
            prices: [{ label: '–ü–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫', amount: 500 * 100 }], // 500 Stars
            start_parameter: 'purchase_training_plan',
            photo_url: 'https://i.pinimg.com/736x/5b/ad/89/5bad896bc3ec8e5bffe19fdf817f1e47.jpg', // REQUIRED - Add a valid image URL
            photo_width: 640,
            photo_height: 640,
            need_name: false,
            need_phone_number: false,
            need_email: false,
            need_shipping_address: false,
            send_phone_number_to_provider: false,
            send_email_to_provider: false,
            is_flexible: false,
        };

        bot.sendInvoice(invoice).catch((error) => {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–Ω–≤–æ–π—Å–∞:', error);
        });
    }


});


// Handle pre-checkout query (confirming payment)
bot.on('pre_checkout_query', (query) => {
    bot.answerPreCheckoutQuery(query.id, true).catch((error) => {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞:', error);
    });
});

// Handle successful payment
bot.on('successful_payment', async (msg) => {
    const chatId = msg.chat.id;
    const paymentPayload = JSON.parse(msg.successful_payment.invoice_payload);

    console.log('‚úÖ –£—Å–ø–µ—à–Ω—ã–π –ø–ª–∞—Ç–µ–∂:', paymentPayload);

    const userId = paymentPayload.user_id;
    const trainingId = paymentPayload.training_id;

    try {
        // Add training plan to user (database update)
        await addUserTraining(userId, trainingId);

        bot.sendMessage(chatId, '‚úÖ –í–∞—à –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω! üéâ');
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–ª–∞–Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫:', error);
        bot.sendMessage(chatId, '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–π –ø–æ–∫—É–ø–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
});

async function addUserTraining(userId, trainingId) {
    console.log(`–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–ª–∞–Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ ${trainingId} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}`);
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
}

console.log('‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –æ–∂–∏–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è...');